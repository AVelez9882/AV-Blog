@model AV_Blog.Models.BlogPost

@{
	ViewBag.Title = "Create";
}

<h2 class="txtStyle text-center">Create</h2>


@using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data"}))
 {
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4 class="txtStyle text-center">BlogPost</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="form-group text-center">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col text-center">
				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group text-center">
			@Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col text-center">
				@Html.EditorFor(model => model.Body)
				@Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group text-center">
			@Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col text-center">
				@Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group text-center">
			@Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col text-center">
				<input name="image" type="file" class="form-control" id="fileupload" />
				@Html.ValidationMessageFor(model => model.MediaURL, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group text-center">
			@Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col text-center">
				<div class="checkbox">
					@Html.EditorFor(model => model.Published)
					@Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group text-center">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-primary btn-outline-primary" />
			</div>
		</div>
	</div>
 }

<div>
	<button class="btn btn-outline-primary btn-primary linkButton2"><a @Html.ActionLink("Back to List", "Index")</a></button>
</div>

@section scripts {
	<script src="~/Scripts/tinymce/tinymce.min.js"></script>
	<script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
	<script>
		$(function () {
			tinymce.init({
				selector: '#Body'
			});
		});
	</script>
}

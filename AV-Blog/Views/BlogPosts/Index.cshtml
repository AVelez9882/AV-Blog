@using PagedList;
@using PagedList.Mvc;
@using AV_Blog.Models;

@model IPagedList<BlogPost>

@{
	ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
{
	<div class="controls controls-row search-row">
		<input id="searchStr" name="searchStr" class="input-block-level" type="text" placeholder="search" />
		<button id="searchStr" name="searchStr" class="btn btn-success" type="submit">
			<i class="icone-search"></i>
		</button>
	</div>
}
<p>
	@if (User.IsInRole("Admin"))
	{
		@Html.ActionLink("Create New", "Create")
	}
</p>
<table class="table">
	<tr>
		<th>
			@Html.DisplayName("Created")
		</th>
		<th>
			@Html.DisplayName("Updated")
		</th>
		<th>
			@Html.DisplayName("Title")
		</th>
		<th>
			@Html.DisplayName("Body")
		</th>
		<th>
			@Html.DisplayName("Abstract")
		</th>
		<th>
			@Html.DisplayName("MediaURL")
		</th>
		<th>
			@Html.DisplayName("Published?")
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model)
	{
		<tr>
			<td>
				@item.Created.ToString("MMM dd, yyyy")
				@*@Html.DisplayFor(modelItem => item.Created)*@
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Updated)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Title)
			</td>
			<td>
				@Html.Raw(item.Body)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Abstract)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MediaURL)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Published)
			</td>
			<td>
				@if (ViewContext.HttpContext.User.IsInRole("Admin"))
				{
					@Html.ActionLink("Details", "Details", new { slug = item.Slug }); <br />
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }); <br />
					@Html.ActionLink("Delete", "Delete", new { id = item.Id }); <br />
				}
				else
				{
					@Html.ActionLink("Details", "Details", new { slug = item.Slug });
				}
			</td>
		</tr>
	}

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

@using AV_Blog.Models
@model LoginViewModel


<head>
	<link href="~/Content/Login.css" rel="stylesheet" />
</head>


<div class="row">
	<div class="col">
		<section id="loginForm">
			@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
			{
				@Html.AntiForgeryToken()
				<h4 class="text-center txtStyle">Log In</h4>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group">
					@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
					<div class="col text-center">
						@Html.TextBoxFor(m => m.Email, new { @class = "form-control text-center" })
						@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
					<div class="col text-center">
						@Html.PasswordFor(m => m.Password, new { @class = "form-control text-center" })
						@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<div class="checkbox">
							@Html.CheckBoxFor(m => m.RememberMe)
							@Html.LabelFor(m => m.RememberMe)
						</div>
					</div>
				</div>
				<div class="form-group">
					<div class="col text-center">
						<input type="submit" value="Log in" class="btn btn-primary btn-outline-primary" />
					</div>
				</div>
				<div class="col text-center">
					<button class="btn linkButton2 btn-outline-primary btn-primary">
						@Html.ActionLink("Register as a new user", "Register")
					</button>
				</div>
				<div class="col text-center">
					<button class="btn linkButton2 btn-outline-primary btn-primary">
						@Html.ActionLink("Forgot your password?", "ForgotPassword")
					</button>
				</div>
}
		</section>
	</div>
	@*<div class="col-md-4">
		<section id="socialLoginForm">
			@Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
		</section>
	</div>*@
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}